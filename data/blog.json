[
  {
    "id": "65f5f019602f8148e29abcea",
    "title": "what is cors?",
    "about": "CORS is an acronym for Cross-Origin Resource Sharing. As we know, all web applications have a front end & a back end and they communicate with each other via API's. In most cases, both the front end and the back end are hosted on the same origin. CORS in node.js helps to get resources from external servers. To better understand this, let's review the following analogy. Consider our application to be a restaurant. The origin is the address of our restaurant. The front end is the dining area and the back end is the kitchen. Both the dining area and the kitchen are at the same address. This enables them to exchange food and service, or in our case, resources. Now, there could be a case where the guests are feeling sick and they request medicine which needs to be fetched from another address outside of the restaurant. In technical terms, the front end requesting to a back end outside of its origin. Thus, this mechanism where a front-end sends a request to a different back-end for some additional service or resource is known as Cross-Origin Resource Sharing. Usually, the front end of an application is only able to make API calls to the back end in its origin. This is known as the Same-Origin Policy and is quite important from a security standpoint. All requests made from the front end of a different origin or to a back end of a different origin will be blocked by the browser. CORS allows us to bypass this policy in case of scenarios where accessing third-party resources becomes necessary.\r\n"
  },
  {
    "id": "65f5f0190b370b6e7bc22ce2",
    "title": "Why are you using firebase? What other options do you have to implement authentication?",
    "about": "Firebase is used to authenticate users in apps like Airbnb and Pinterest. Realtime Database. The Firebase Realtime Database is used to store and sync data in real time in apps like Uber and Snapchat. Cloud Messaging. Yes here are some other authentication options: (1)Multi-factor authentication (MFA) (2)Token authentication (3)OpenID (4)Biometric authentication (5)Adaptive authentication (6)Identity platform (7)Identity federation using saml\r\n"
  },
  {
    "id": "65f5f0190942c56998ae83f5",
    "title": "How does the private route work?",
    "about": "In React, private routes restrict access to specific parts of an application based on the user's authentication status. For example, a private route might redirect users to a login page if they are not authenticated. Private routes are often used to protect sensitive content, such as user profiles, dashboards, and admin panels. Private routes are implemented using a combination of route handling from a router library and conditional rendering based on authentication status. For example, in React Router 6, a private route component renders child components if the user is logged in, and redirects them to the /login page if they are not. There are three approaches to implementing private routes in React: Context API, Hooks, and Higher Order Components (HOC). You can also define a guard function that checks whether the user is authenticated or has the necessary permissions to access the route. If the user is authorized, the guard function can allow the route to be rendered.\r\n"
  },
  {
    "id": "65f5f019bc88dd4f8c171af6",
    "title": "What is Node? How does Node work?",
    "about": "Node can refer to a basic data structure that contains data and links to other nodes, or a point of connection in a data communication network. In data structures, nodes can represent a tree structure or a linked list, and allow nodes to be traversed from one to another. In a network, a node is a connection point between devices that can send and receive data. For example, a node can be a router, printer, or switch in a telephone network, or a home appliance in a smart home domotics system. A computer's Network Interface Card (NIC) is also a node that connects a computer to a network. Node can also refer to a piece of content on a website, such as a page, article, or blog entry. Comments are not nodes, but are always connected to one. Node may also refer to Node.js, a runtime environment for agile software development. Node.js takes requests from users, processes them, and returns responses to the corresponding users.\r\n"
  }
]
